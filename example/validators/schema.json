{
	"openapi": "3.0.0",
	"info": {
		"version": "1.0.0",
		"title": "Swagger Petstore",
		"description": "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"name": "Swagger API Team",
			"email": "apiteam@swagger.io",
			"url": "http://swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "https://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"servers": [
		{
			"url": "http://petstore.swagger.io/api"
		}
	],
	"paths": {
		"/pets": {
			"get": {
				"summary": "Get all pets",
				"operationId": "GetPets",
				"tags": [
					"Pet"
				],
				"parameters": [
					{
						"in": "query",
						"name": "per_page",
						"schema": {
							"type": "integer",
							"format": "int32",
							"example": 10,
							"default": 10
						},
						"description": "Num of pets to show per page"
					},
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"format": "int32",
							"example": 1,
							"default": 1
						},
						"description": "Num of page"
					},
					{
						"in": "query",
						"name": "order_by",
						"schema": {
							"type": "string",
							"example": "id",
							"default": "id"
						},
						"description": "Property to sort by"
					},
					{
						"in": "query",
						"name": "order",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							],
							"example": "asc",
							"default": "desc"
						},
						"description": "Sort order"
					}
				],
				"responses": {
					"200": {
						"description": "A paged array of pets",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"pets",
										"total",
										"per_page",
										"page"
									],
									"properties": {
										"total": {
											"type": "integer",
											"format": "int32",
											"example": 3673
										},
										"per_page": {
											"type": "integer",
											"format": "int32",
											"example": 5
										},
										"page": {
											"type": "integer",
											"format": "int32",
											"example": 1
										},
										"pets": {
											"type": "array",
											"items": {
												"type": "object",
												"required": [
													"id",
													"name",
													"category",
													"sex"
												],
												"properties": {
													"id": {
														"type": "integer",
														"format": "int64"
													},
													"name": {
														"type": "string"
													},
													"category": {
														"type": "integer",
														"format": "int32",
														"enum": [
															1,
															2,
															3
														]
													},
													"sex": {
														"type": "string",
														"enum": [
															"male",
															"female"
														]
													},
													"note": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a pet",
				"operationId": "CreatePet",
				"tags": [
					"Pet"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"pet"
								],
								"properties": {
									"pet": {
										"type": "object",
										"required": [
											"name",
											"category",
											"sex"
										],
										"properties": {
											"name": {
												"type": "string"
											},
											"category": {
												"type": "integer",
												"format": "int32",
												"enum": [
													1,
													2,
													3
												]
											},
											"sex": {
												"type": "string",
												"enum": [
													"male",
													"female"
												]
											},
											"note": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"pet"
									],
									"properties": {
										"pet": {
											"type": "object",
											"required": [
												"id",
												"name",
												"category",
												"sex"
											],
											"properties": {
												"id": {
													"type": "integer",
													"format": "int64"
												},
												"name": {
													"type": "string"
												},
												"category": {
													"type": "integer",
													"format": "int32",
													"enum": [
														1,
														2,
														3
													]
												},
												"sex": {
													"type": "string",
													"enum": [
														"male",
														"female"
													]
												},
												"note": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/pets/{petId}": {
			"get": {
				"summary": "Info for a specific pet",
				"operationId": "GetPet",
				"tags": [
					"Pet"
				],
				"parameters": [
					{
						"name": "petId",
						"in": "path",
						"required": true,
						"description": "The id of the pet to retrieve",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Expected response to a valid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"pet"
									],
									"properties": {
										"pet": {
											"type": "object",
											"required": [
												"id",
												"name",
												"category",
												"sex"
											],
											"properties": {
												"id": {
													"type": "integer",
													"format": "int64"
												},
												"name": {
													"type": "string"
												},
												"category": {
													"type": "integer",
													"format": "int32",
													"enum": [
														1,
														2,
														3
													]
												},
												"sex": {
													"type": "string",
													"enum": [
														"male",
														"female"
													]
												},
												"note": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Pet": {
				"type": "object",
				"required": [
					"id",
					"name",
					"category",
					"sex"
				],
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					},
					"category": {
						"type": "integer",
						"format": "int32",
						"enum": [
							1,
							2,
							3
						]
					},
					"sex": {
						"type": "string",
						"enum": [
							"male",
							"female"
						]
					},
					"note": {
						"type": "string"
					}
				}
			},
			"PetSeed": {
				"type": "object",
				"required": [
					"name",
					"category",
					"sex"
				],
				"properties": {
					"name": {
						"type": "string"
					},
					"category": {
						"type": "integer",
						"format": "int32",
						"enum": [
							1,
							2,
							3
						]
					},
					"sex": {
						"type": "string",
						"enum": [
							"male",
							"female"
						]
					},
					"note": {
						"type": "string"
					}
				}
			}
		}
	},
	"$schema": "http://json-schema.org/draft-04/schema#"
}